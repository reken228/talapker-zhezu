export async function sendToQwen(messages) {
  try {
    console.log("üì§ –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π:", messages);
    
    const response = await fetch("https://openrouter.ai/api/v1/chat/completions", {
      method: "POST",
      headers: {
        "Authorization": `Bearer ${process.env.REACT_APP_API_KEY}`,

        "Content-Type": "application/json"
      },
      body: JSON.stringify({
        model: "microsoft/mai-ds-r1:free", // ‚úÖ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–æ
        messages
      }),
    });

    const data = await response.json();
    console.log("üì• –û—Ç–≤–µ—Ç –æ—Ç API:", data);

    if (!response.ok) {
      console.error("‚ùó API –≤–µ—Ä–Ω—É–ª –æ—à–∏–±–∫—É:", data.error);
      return `“ö–∞—Ç–µ –∂–∞—É–∞–ø: ${data.error?.message || "—Å–µ—Ä–≤–µ—Ä–¥–µ–Ω –∂–∞—É–∞–ø –∞–ª—ã–Ω–±–∞–¥—ã."}`;
    }

    const message = data.choices?.[0]?.message?.content;
    console.log("‚úÖ –û—Ç–≤–µ—Ç –æ—Ç –º–æ–¥–µ–ª–∏:", message);

    return message || "“ö–∞—Ç–µ –∂–∞—É–∞–ø: –±–æ—Å –∂–∞—É–∞–ø.";
  } catch (err) {
  console.error("‚ùå –û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è:", err);
  alert("–û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è: " + err.message);
  return "“ö–∞—Ç–µ –∂–∞—É–∞–ø: “õ–æ—Å—ã–ª—É –∫–µ–∑—ñ–Ω–¥–µ “õ–∞—Ç–µ —à—ã“õ—Ç—ã.";
}

}
